}
sigma<-sumsqu/(length(Data$gdp)-1)
sigma
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-0
for (i in 1:length(myls)) {
if(!is.na(myls[i])){
sumsqu<-sumsqu + ((as.numeric(unlist(myls[i])))-mu)**2}
}
sigma<-sumsqu/(length(Data$gdp)-1)
sigma
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-0
for (i in 1:length(myls)) {
if(!is.na(myls[i])){
sumsqu<-sumsqu + ((as.numeric(unlist(myls[i])))-mu)**2}
}
sumsqu
sigma<-sumsqu/(length(Data$gdp)-1)
sigma
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-0
for (i in 1:length(myls)) {
if(!is.na(myls[i])){
sumsqu<-sumsqu + ((as.numeric(unlist(myls[i])))-mu)**2}
}
sumsqu
sigma<-sumsqu/(length(Data$gdp)-1)
sigma
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-0
for (i in 1:length(myls)) {
if(!is.na(myls[i])){
sumsqu<-sumsqu + (lapply(myls[i],as.numeric)-mu)**2}
}
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-0
for (i in 1:length(myls)) {
if(!is.na(myls[i])){
sumsqu<-sumsqu + (as.numuric(myls[i])-mu)**2}
}
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-0
for (i in 1:length(myls)) {
if(!is.na(myls[i])){
sumsqu<-sumsqu + (as.numeric(myls[i])-mu)**2}
}
sum((myls-mu)^2)
sum((unlist(myls)-mu)^2)
myls <- vector("list", length = length(Data$gdp))
sum<-0
for (i in 1:length(Data$gdp)) {
if(!is.na(Data$gdp[i])){
myls[i]<-log(Data$gdp)[i]+i
sum<-sum + as.numeric(myls[i])}
}
mu<-sum/length(Data$gdp)
mu
sumsqu<-sum((unlist(myls)-mu)^2)
sigma<-sumsqu/(length(Data$gdp)-1)
sigma
sigma<-sqrt(sumsqu/(length(Data$gdp)-1))
sigma
The result shows that Y=
hist(myls)
hist(unlist(myls))
sumsqu<-sum((unlist(myls)-mu)^2)
sigma<-sqrt(sumsqu/(length(Data$gdp)-1))
sigma
sigma<-sumsqu/(length(Data$gdp)-1)
sigma
sigma<-sqrt(sumsqu/(length(Data$gdp)-1))
sigma
gX <- grep("^X", Data$iso2c)
library(WDI)
Data <- WDI(indicator = c("NY.GDP.MKTP.CD"), start = 2020,end = 2020)
g1 <- grep("1", Data$iso2c)
g2 <- grep("2", Data$iso2c)
g3 <- grep("3", Data$iso2c)
g4 <- grep("4", Data$iso2c)
g5 <- grep("5", Data$iso2c)
g6 <- grep("6", Data$iso2c)
g7 <- grep("7", Data$iso2c)
g8 <- grep("8", Data$iso2c)
not.pick <- c(g1, g2, g3, g4, g5, g6,g7, g8)
Data <- Data[-not.pick, ]
install.packages('tidyverse')
library(tidyverse)
gX <- grep("^X", Data$iso2c)
not.pick.X <- unique(Data[gX, ]$iso2c)[-9]
not.pick.X
not.pick.X <- unique(Data[gX, ]$iso2c)[-9]
gZ <- grep("^Z", Data$iso2c)
not.pick.Z <- unique(Data[gZ, ]$iso2c)[-c(1,
7, 10)]
not.pick <- c("EU", "OE", not.pick.X,
not.pick.Z)
not.pick
n <- length(not.pick)
for (i in 1:n) {
Data <- Data %>%
filter(iso2c != not.pick[i])
}
names(Data)[4]<- c("gdp")
View(Data)
unique(Data[gX, ]$iso2c)
unique(Data[gX, ]$iso2c)[-9]
grep("^X", Data$iso2c)
gX
gX <- grep("^X", Data$iso2c)
not.pick.X <- unique(Data[gX, ]$iso2c)[-9]
not.pick.X <- unique(Data[gX, ]$iso2c)[-9]
not.pick.X
unique(Data[gX, ]$iso2c)
gX <- grep("^X", Data$iso2c)
not.pick.X <- unique(Data[gX, ]$iso2c)[-9]
gX <- grep("^X", Data$iso2c)
gX
Data <- WDI(indicator = c("NY.GDP.MKTP.CD"), start = 2020,end = 2020)
g1 <- grep("1", Data$iso2c)
g2 <- grep("2", Data$iso2c)
g3 <- grep("3", Data$iso2c)
g4 <- grep("4", Data$iso2c)
g5 <- grep("5", Data$iso2c)
g6 <- grep("6", Data$iso2c)
g7 <- grep("7", Data$iso2c)
g8 <- grep("8", Data$iso2c)
not.pick <- c(g1, g2, g3, g4, g5, g6,g7, g8)
Data <- Data[-not.pick, ]
library(tidyverse)
gX <- grep("^X", Data$iso2c)
unique(Data[gX, ]$iso2c)[-9]
unique(Data[gX, ]$iso2c)
Data<-na.omit(Data)
grep("^X", Data$iso2c)
unique(Data[gX, ]$iso2c)
gX
Data[gX, ]$iso2c
unique(Data[gX, ]$iso2c)
unique(Data[gX, ]$iso2c)[-9]
View(Data)
gZ <- grep("^Z", Data$iso2c)
unique(Data[gZ, ]$iso2c)
unique(Data[gZ, ]$iso2c)[-c(1,
7, 10)]
library(MASS)
data(geyser)
#Q3
attach(geyser)
rm (ls = list())
head(geyser)
rm(list = ls())
#Q3
attach(geyser)
data(geyser)
head(geyser)
#Q3
#attach(geyser)
hist(geyser$waiting,freq = False)
#Q3
#attach(geyser)
hist(geyser$waiting,freq = FALSE)
#Q4
curve(dexp(x,reate = 1/mean(geyser$waiting)),col = "red")
#Q4
curve(dexp(x,reate = 1/mean(geyser$waiting)),col = "red",lty = 1,add = TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col=”red”,lty=1,add=TRUE)
#Q4
curve(dexp(x,rate=1/mean(geyser$waiting)),col = "red",lty = 1,add = TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col=”red”,lty=1,add=TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="red",lty=1,add=TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="red",lty=2,add=TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="red",lty=3,add=TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="blue",lty=8,add=FALSE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="blue",lty=8,add=TRUE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="blue",lty=8,add=TRUE)
#Q3
#attach(geyser)
hist(geyser$waiting,freq = FALSE)
curve(dexp(x,rate=1/mean(geyser$waiting)),col="blue",lty=8,add=TRUE)
length(geyser$waiting)
#Q5
m = mean(geyser$waiting)
std = sd(geyser$waiting)
curve(dnorm(x,mean = m,sd = std),col="blue",lty=8,add=TRUE)
std = sd(geyser$waiting)
hist(geyser$waiting,freq = FALSE)
curve(dnorm(x,mean = m,sd = std),col="blue",lty=8,add=TRUE)
#Q6
hist(geyser$waiting,freq = FALSE,xlab = "waiting time(in mins)",main = "geyser waiting time
(in mins)")
#Q7
set.seed(111)
theoretical.dsn.sim <- rexp(n=10000,rate=1/mean(geyser$waiting))
qqplot(theoretical.dsn.sim,geyser$waiting)
qqplot(theoretical.dsn.sim,geyser$waiting,xlim = c(0,300),ylim = c(0,300))
ab(0,1)
abline(0,1)
qqplot(theoretical.dsn.sim,geyser$waiting,xlim = c(0,600),ylim = c(0,600))
abline(0,1)
#Q8
theoretical.dsn.sim.norm <- rnorm(n=10000,mena = m, sd = std)
#Q8
theoretical.dsn.sim.norm <- rnorm(n=10000,mean = m, sd = std)
#Q8
set.seed(111)
theoretical.dsn.sim.norm <- rnorm(n=10000,mean = m, sd = std)
qqplot(theoretical.dsn.sim.norm,geyser$waiting)
qqplot(theoretical.dsn.sim.norm,geyser$waiting
,xlab = c(40,120)
,ylab = c(40, 120))
abline(0,1)
qqplot(theoretical.dsn.sim.norm,geyser$waiting
,xlab = c(40,120)
,ylab = c(40, 120))
qqplot(theoretical.dsn.sim.norm,geyser$waiting
,xlim = c(40,120)
,ylim = c(40, 120))
abline(0,1)
qqplot(theoretical.dsn.sim,geyser$waiting,xlim = c(0,600),ylim = c(0,600),
main = "qqplot of normal distribution vs abservations",
xlab = "theory",
ylab = "observations")
#Q8
set.seed(111)
theoretical.dsn.sim.norm <- rnorm(n=10000,mean = m, sd = std)
qqplot(theoretical.dsn.sim.norm,geyser$waiting
,xlim = c(40,120)
,ylim = c(40, 120))
abline(0,1)
#Q10
# right-censored at 85
mean(geyser$waiting)
x,new.1[geyser$waiting>85]<-85
mean(x.new.1)
x.new.1<- geyser$waiting
x,new.1[geyser$waiting>85]<-85
x.new.1[geyser$waiting>85]<-85
mean(x.new.1)
x.new.2[geyser$waiting>85]<- NA
x.new.3<-na.omit(x.new.2)
x.new.2<-geyser$waiting
x.new.2[geyser$waiting>85]<- NA
x.new.3<-na.omit(x.new.2)
mean(x.new.3)
mena(x.new.2,na.rm = TRUE)
mean(x.new.2,na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
set.seed(666)
cos2pix<-function(n){
unifo<-seq(0,1,length.out = n)
y<-sum(cos(2*pi*unifo^2))
return(y)
}
cos2pix(100)
cos2pix(1000)
set.seed(666)
cos2pix<-function(n){
unifo<-seq(0,1,length.out = n)
y<-sum(cos(2*pi*unifo))
return(y)
}
cos2pix(100)
cos2pix(1000)
unifo<-seq(0,1,length.out = n)
unifo
seq(0,1,length.out = 100)
y<-sum(cos(2*pi*unifo))
y
set.seed(666)
cos2pix<-function(n){
unifo<-seq(0,1,length.out = n)
y<-sum(cos(2*pi*unifo))
return(y)
}
cos2pix(100)
cos2pix(1000)
set.seed(666)
cos2pix<-function(n){
unifo<-seq(0,1,length.out = n)
y<-sum(cos(2*pi*unifo^2))
return(y)
}
cos2pix(100)
cos2pix(1000)
set.seed(666)
cos2pix<-function(n){
unifo<-seq(0,1,length.out = n)
y<-sum(cos(2*pi*unifo^2))
return(y)
}
cos2pix(100)
cos2pix(100000)
unifo<-seq(0,1,length.out = n)
cos(2*pi*unifo^2)
unifo
unifo^2
*piunifo^2
pi*unifo^2
*2pi*unifo^2
2*pi*unifo^2
setwd("E:/ANU Sem 2/STAT3040STAT7040 - Statistical Learning/Assignment 1")
Data <-
read.table("Data.txt",header=TRUE,stringsAsFactors=TRUE
)
train.data = Data[1:300,]
test.data = Data[301:length(Data$Y),]
Data$Y<-log(Data$Y)
setwd("E:/ANU Sem 2/STAT3040STAT7040 - Statistical Learning/Assignment 1")
Data <-
read.table("Data.txt",header=TRUE,stringsAsFactors=TRUE
)
train.data = Data[1:300,]
test.data = Data[301:length(Data$Y),]
summary(train.data)
hist(Y)
hist(train.data$Y)
summary(train.data)
hist(train.data$Y)
hist(log(train.data$Y))
pairs(train.data)
summary(train.data)
hist(train.data$Y)
hist(log(train.data$Y))
pairs(train.data)
View(Data)
library(tidyverse)
ggplot(data = train.data)
library(tidyverse)
ggplot(data = train.data)
library(tidyverse)
ggplot(data = train.data)
ggplot(data = train.data) +
geom_histogram(mapping = aes(x = train.data$x1),binwidth = 0.5)
ggplot(data = train.data) +
geom_histogram(mapping = aes(x = x1),binwidth = 0.5)
ggplot(data = train.data) +
geom_histogram(mapping = aes(x = x1))
ggplot(data = train.data) +
geom_histogram(mapping = aes(x = x1),bins = 30)
geom_histogram(mapping = aes(x = c(x1,x3),bins = 30)
geom_point(mapping = aes(x = c(x1,x3),bins = 30)
geom_point(mapping = aes(x = c(x1,x3),y = Y )
geom_point(mapping = aes(x = c(x1,x3),y = Y)
ggplot(data = train.data) +
library(tidyverse)
library(tidyverse)
ggplot(data = train.data) +
geom_point(mapping = aes(x = c(x1,x3),y = Y)
setwd("E:/ANU Sem 2/STAT3040STAT7040 - Statistical Learning/Assignment 1")
Data <-
read.table("Data.txt",header=TRUE,stringsAsFactors=TRUE
)
train.data = Data[1:300,]
test.data = Data[301:length(Data$Y),]
library(tidyverse)
ggplot(data = train.data) +
geom_point(mapping = aes(x = c(x1,x3),y = Y)
geom_point(mapping = aes(x = x1,y = Y)
library(tidyverse)
library(tidyverse)
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y)
library(tidyverse)
ggplot(data = train.data) +
library(tidyverse)
```{r train.data}
library(tidyverse)
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y,color = class))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x1))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x1))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x2))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x2))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x2))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x2))+
geom_bar(mapping = aes(x = x3))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x2))+
geom_histogram(mapping = aes(x = x3))
ggplot(data = train.data) +
geom_point(mapping = aes(x = x1,y = Y))+
geom_bar(mapping = aes(x = x2))+
geom_histogram(mapping = aes(x = x3),binwidth = 30)
ggplot(data = train.data) +
geom_freqpoly(mapping = aes(x1),binwidth = 30)
ggplot(data = train.data) +
geom_boxplot(mapping = aes(x = x1,y = Y))
ggplot(data = train.data) +
geom_boxplot(mapping = aes(x = x1 , x2,y = Y))
ggplot(data = train.data) +
geom_boxplot(mapping = aes(x = c(x1,x2),y = Y))
summary(train.data)
boxplot(train.data$Y)
boxplot(log(train.data$Y))
hist(log(train.data$Y))
plot(log(train.data$Y))
boxplot(train.data$Y,train.data$x1)
boxplot(train.data$Y)
stripchart(train.data$Y, method = "jitter", pch = 19, add = TRUE, col = "blue")
boxplot(train.data$Y)
stripchart(train.data$Y, method = "jitter", pch = 19, add = TRUE, col = "blue")
boxplot(train.data$Y)
stripchart(train.data$Y, method = "jitter", pch = 19, add = TRUE, col = "blue")
invisible(lapply(1:ncol(train.data), function(i)boxplot(train.data[,i])))
par(mfrow = c(1,ncol(train.data)))
invisible(lapply(1:ncol(train.data), function(i)boxplot(train.data[,i])))
summary(train.data)
par(mfrow = c(2,ncol(train.data)/2))
invisible(lapply(1:ncol(train.data), function(i)boxplot(train.data[,i])))
hist(log(train.data$x1))
plot(log(train.data$x1))
hist(train.data$x1)
plot(train.data$x1)
min(train.data$x1)
identify(train.data$x1)
min(train.data$x1)
plot(train.data$x1)
identify(train.data$x1)
?identify
plot(train.data$x1)
identify(index,train.data$x1)
identify(train.data$x1$index,train.data$x1)
min(train.data$x1)
plot(train.data$x1)
identify(train.data$x1$index,train.data$x1)
plot(train.data$x1)
plot(min(train.data$x1):max(train.data$x1,train.data$x1)
min(train.data$x1)
min(train.data$x1)
plot(min(train.data$x1):max(train.data$x1,train.data$x1))
identify(min(train.data$x1):max(train.data$x1,train.data$x1))
min(train.data$x1)
plot(range(min(train.data$x1):max(train.data$x1),train.data$x1))
identify(min(train.data$x1):max(train.data$x1,train.data$x1))
plot(range(min(train.data$x1):max(train.data$x1),train.data$x1))
identify(min(train.data$x1):max(train.data$x1,train.data$x1))
?identify
plot(train.data$x1))
plot(train.data$x1)
identify(train.data$x1,labels = row.names(train.data$x1))
#a)
plot(train.data$x1)
identify(train.data$x1,labels = row.names(train.data$x1))
identify(train.data$x1)
plot(train.data$x1)
identify(train.data$x1)
