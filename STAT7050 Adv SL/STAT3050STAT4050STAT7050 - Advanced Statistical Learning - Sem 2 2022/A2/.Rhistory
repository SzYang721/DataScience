ylab = "orange crab rear width",col = "orange")
blue<-as.data.frame(re_blue[1])
plot(blue$V1,blue$V2,ylim = c(10,20),xlim = c(10,15),xlab = "blue carb body depth",
ylab = "blue crab rear width")
par(mfrow = c(1,2))
orange<-as.data.frame(re_orange[1])
plot(orange$V1,orange$V2,ylim = c(10,20),xlim = c(10,14),xlab = "orange carb body depth",
ylab = "orange crab rear width",col = "orange")
blue<-as.data.frame(re_blue[1])
plot(blue$V1,blue$V2,ylim = c(10,20),xlim = c(10,15),xlab = "blue carb body depth",
ylab = "blue crab rear width",col = "blue")
par(mfrow = c(1,2))
SIGMA_o<-re_orange[[2]]
rho_o<-SIGMA_o[,2]/sqrt(SIGMA_o[,1]*SIGMA_o[,4])
mean(rho_o)
plot(density(rho_o),xlim = c(0.9,1),xlab = "Density plot of car for orange crab")
abline(v=mean(rho_o), col= "red", lty=2, lwd=3)
SIGMA_b<-re_blue[[2]]
rho_b<-SIGMA_b[,2]/sqrt(SIGMA_b[,1]*SIGMA_b[,4])
mean(rho_b)
lines(density(rho_b),xlim = c(0.9,1),xlab = "Density plot of car for blue crab")
abline(v=mean(rho_b), col= "red", lty=2, lwd=3)
SIGMA_o<-re_orange[[2]]
rho_o<-SIGMA_o[,2]/sqrt(SIGMA_o[,1]*SIGMA_o[,4])
mean(rho_o)
plot(density(rho_o),xlim = c(0.9,1),xlab = "Density plot of car for orange crab",col = "orange")
abline(v=mean(rho_o), col= "red", lty=2, lwd=3)
SIGMA_b<-re_blue[[2]]
rho_b<-SIGMA_b[,2]/sqrt(SIGMA_b[,1]*SIGMA_b[,4])
mean(rho_b)
lines(density(rho_b),xlim = c(0.9,1),xlab = "Density plot of car for blue crab",col = "blue")
abline(v=mean(rho_b), col= "red", lty=2, lwd=3)
mean(rho_o>rho_b)
mean(rho_o>rho_b)
agehw<-read.table(file = "agehw.dat",header = TRUE)
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(400,200,200,400),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
# why do we always assume p+2 ????
prior_pre<-function(mu0,L0,nu0,S0){
YS<-NULL
for (i in 1:100){
theta<-rmvnorm(1,mu0,L0)
Sigma<-rinvwish(1,nu0,solve(S0))
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
}
return(YS)
}
par(mfrow = c(1,3))
YS1<-prior_pre(mu0,L0,nu0,S0)
plot(YS1[,1],YS1[,2], xlab = "Husband Age", ylab = "Wife Age")
YS2<-prior_pre(mu0,L0,nu0,S0)
plot(YS2[,1],YS2[,2], xlab = "Husband Age", ylab = "Wife Age")
YS3<-prior_pre(mu0,L0,nu0,S0)
plot(YS3[,1],YS3[,2], xlab = "Husband Age", ylab = "Wife Age")
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(400,200,200,400),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
# why do we always assume p+2 ???? how inverse whisha is difined.
prior_pre<-function(mu0,L0,nu0,S0){
YS<-NULL
for (i in 1:100){
theta<-rmvnorm(1,mu0,L0)
Sigma<-rinvwish(1,nu0,solve(S0))
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
}
return(YS)
}
par(mfrow = c(1,3))
YS1<-prior_pre(mu0,L0,nu0,S0)
plot(YS1[,1],YS1[,2], xlab = "Husband Age", ylab = "Wife Age")
YS2<-prior_pre(mu0,L0,nu0,S0)
plot(YS2[,1],YS2[,2], xlab = "Husband Age", ylab = "Wife Age")
YS3<-prior_pre(mu0,L0,nu0,S0)
plot(YS3[,1],YS3[,2], xlab = "Husband Age", ylab = "Wife Age")
L0<-Sigma<-matrix(c(225,112.5,112.5,225),2,2)
S0<-Sigma
par(mfrow = c(1,3))
YS1<-prior_pre(mu0,L0,nu0,S0)
plot(YS1[,1],YS1[,2], xlab = "Husband Age", ylab = "Wife Age")
YS2<-prior_pre(mu0,L0,nu0,S0)
plot(YS2[,1],YS2[,2], xlab = "Husband Age", ylab = "Wife Age")
YS3<-prior_pre(mu0,L0,nu0,S0)
plot(YS3[,1],YS3[,2], xlab = "Husband Age", ylab = "Wife Age")
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(225,112.5,112.5,225),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
mean(theta_agehw$X1,theta_agehw$X2)
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(225,112.5,112.5,225),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(225,112.5,112.5,225),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
plot(theta_agehw$X1)
plot(theta_agehw$X2)
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(225,112.5,112.5,225),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
hist(theta_agehw$X1)
hist(theta_agehw$X2)
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,50),2,1)
L0<-Sigma<-matrix(c(100,50,50,100),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
hist(theta_agehw$X1)
hist(theta_agehw$X2)
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,48),2,1)
L0<-Sigma<-matrix(c(100,50,50,100),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
hist(theta_agehw$X1)
hist(theta_agehw$X2)
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
L0
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(40,38),2,1)
L0<-Sigma<-matrix(c(100,50,50,100),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
hist(theta_agehw$X1)
hist(theta_agehw$X2)
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
YS<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mu0)
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
###
YS<-rbind(YS,rmvnorm(1,theta,Sigma))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA,YS)
return(return_list)
}
mu0<-matrix(c(50,48),2,1)
L0<-Sigma<-matrix(c(100,90,90,100),2,2)
S0<-Sigma
p <- 2
nu0 <- p+2
n<-nrow(agehw)
Y<-agehw
par(mfrow = c(1,2))
# MCMC approximation
re_list<-gibbs.norm(mu0,L0,S0,Sigma,nu0,n,Y,5000)
# Joint posterior distribution of θh and θw
theta_agehw<-as.data.frame(re_list[1])
hist(theta_agehw$X1)
hist(theta_agehw$X2)
mean(theta_agehw$X1);mean(theta_agehw$X2)
plot(theta_agehw$X1,theta_agehw$X2)
# The marginal posterior density of the correlation between Yh and Yw
Sigma_agehw<-re_list[[2]]
rho_age<-Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4])
mean(rho_age)
plot(density(rho_age))
abline(v=mean(rho_age), col= "red", lty=2, lwd=3)
# 95% posterior confidence intervals for θh and θw and the correlation coefficient
quantile(theta_agehw[,1], prob=c(.025,.5,.975) )
quantile(theta_agehw[,2], prob=c(.025,.5,.975) )
quantile(Sigma_agehw[,2]/sqrt(Sigma_agehw[,1]*Sigma_agehw[,4]), prob=c(.025,.5,.975) )
mu0_o<-matrix(c(mean(orangecrad$V1),mean(orangecrad$V2)),2,1)
L0_o<-Sigma_o<-cov(orangecrad)
S0_o<-Sigma_o
nu0_o <- 4
n_o<-nrow(orangecrad)
Y_o<-orangecrad
### Gibbs Sampler
gibbs.norm<-function(mu0,L0,S0,Sigma,nu0,n,Y,iteration){
THETA<-SIGMA<-NULL
for(s in 1:iteration)
{
###update theta
L_n<-solve(solve(L0)+n_o*solve(Sigma))
mu_n<-solve(solve(L0)+n_o*solve(Sigma))%*%(solve(L0)%*%mu0+n*solve(Sigma)%*%mean(Y))
theta<-rmvnorm(1,mu_n,L_n)
###
###update Sigma
Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) )
Sigma<-rinvwish(1,nu0+n,solve(Sn))
###
### save results
THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
###
}
return_list <- list(THETA,SIGMA)
return(return_list)
}
re_orange<-gibbs.norm(mu0_o,L0_o,S0_o,Sigma_o,nu0_o,n_o,Y_o,1000)
re_orange<-gibbs.norm(mu0_o,L0_o,S0_o,Sigma_o,nu0_o,n_o,Y_o,1000)
mean(Y_o)
Y_o<-orangecrad
Y_o
mean(Y_o)
mean(Y_o,x = Y_o$V1)
